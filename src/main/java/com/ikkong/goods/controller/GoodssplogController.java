package com.ikkong.goods.controller;

import java.util.Map;
import com.ikkong.core.base.BaseController;
import com.ikkong.core.jfinal.ext.kit.JsonKit;
import com.ikkong.system.controller.base.UrlPermissController;
import com.ikkong.goods.model.Goodssplog;
import com.ikkong.goods.service.GoodssplogService;
import com.ikkong.goods.service.impl.GoodssplogServiceImpl;

/**
 * Generated by Blade.
 * 2018-07-25 09:28:36
 */
public class GoodssplogController extends UrlPermissController {
	private static String CODE = "goodssplog";
	private static String PERFIX = "nsl_goods_splog";
	private static String LIST_SOURCE = "Goodssplog.list";
	private static String BASE_PATH = "/platform/goodssplog/";
	
	GoodssplogService service = new GoodssplogServiceImpl();
	
	public void index() {
		setAttr("code", CODE);
		render(BASE_PATH + "goodssplog.html");
	}

	public void add() {
		setAttr("code", CODE);
		render(BASE_PATH + "goodssplog_add.html");
	}

	public void edit() {
		String id = getPara(0);
		Goodssplog goodssplog = service.findById(id);
		setAttr("model", JsonKit.toJson(goodssplog));
		setAttr("id", id);
		setAttr("code", CODE);
		render(BASE_PATH + "goodssplog_edit.html");
	}

	public void view() {
		String id = getPara(0);
		Goodssplog goodssplog = service.findById(id);
		setAttr("model", JsonKit.toJson(goodssplog));
		setAttr("id", id);
		setAttr("code", CODE);
		render(BASE_PATH + "goodssplog_view.html");
	}

	public void list() {
		Object grid = paginate(LIST_SOURCE);
		renderJson(grid);
	}

	public void save() {
		Goodssplog goodssplog = mapping(PERFIX, Goodssplog.class);
		boolean temp = service.save(goodssplog);
		if (temp) {
			renderJson(success(SAVE_SUCCESS_MSG));
		} else {
			renderJson(error(SAVE_FAIL_MSG));
		}
	}

	public void update() {
		Goodssplog goodssplog = mapping(PERFIX, Goodssplog.class);
		boolean temp = service.update(goodssplog);
		if (temp) {
			renderJson(success(UPDATE_SUCCESS_MSG));
		} else {
			renderJson(error(UPDATE_FAIL_MSG));
		}
	}

	public void remove() {
		String ids = getPara("ids");
		int cnt = service.deleteByIds(ids);
		if (cnt > 0) {
			renderJson(success(DEL_SUCCESS_MSG));
		} else {
			renderJson(error(DEL_FAIL_MSG));
		}
	}
}
