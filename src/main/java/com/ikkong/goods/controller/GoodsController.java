package com.ikkong.goods.controller;

import java.util.Map;
import com.ikkong.core.base.BaseController;
import com.ikkong.core.jfinal.ext.kit.JsonKit;
import com.ikkong.system.controller.base.UrlPermissController;
import com.ikkong.goods.model.Goods;
import com.ikkong.goods.service.GoodsService;
import com.ikkong.goods.service.impl.GoodsServiceImpl;

/**
 * Generated by Blade.
 * 2018-07-25 09:28:36
 */
public class GoodsController extends UrlPermissController {
	private static String CODE = "goods";
	private static String PERFIX = "nsl_goods";
	private static String LIST_SOURCE = "Goods.list";
	private static String BASE_PATH = "/platform/goods/";
	
	GoodsService service = new GoodsServiceImpl();
	
	public void index() {
		setAttr("code", CODE);
		render(BASE_PATH + "goods.html");
	}

	public void add() {
		setAttr("code", CODE);
		render(BASE_PATH + "goods_add.html");
	}

	public void edit() {
		String id = getPara(0);
		Goods goods = service.findById(id);
		setAttr("model", JsonKit.toJson(goods));
		setAttr("id", id);
		setAttr("code", CODE);
		render(BASE_PATH + "goods_edit.html");
	}

	public void view() {
		String id = getPara(0);
		Goods goods = service.findById(id);
		setAttr("model", JsonKit.toJson(goods));
		setAttr("id", id);
		setAttr("code", CODE);
		render(BASE_PATH + "goods_view.html");
	}

	public void list() {
		Object grid = paginate(LIST_SOURCE);
		renderJson(grid);
	}

	public void save() {
		Goods goods = mapping(PERFIX, Goods.class);
		boolean temp = service.save(goods);
		if (temp) {
			renderJson(success(SAVE_SUCCESS_MSG));
		} else {
			renderJson(error(SAVE_FAIL_MSG));
		}
	}

	public void update() {
		Goods goods = mapping(PERFIX, Goods.class);
		boolean temp = service.update(goods);
		if (temp) {
			renderJson(success(UPDATE_SUCCESS_MSG));
		} else {
			renderJson(error(UPDATE_FAIL_MSG));
		}
	}

	public void remove() {
		String ids = getPara("ids");
		int cnt = service.deleteByIds(ids);
		if (cnt > 0) {
			renderJson(success(DEL_SUCCESS_MSG));
		} else {
			renderJson(error(DEL_FAIL_MSG));
		}
	}
}
