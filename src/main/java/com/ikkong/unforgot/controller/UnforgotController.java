package com.ikkong.unforgot.controller;

import java.util.List;
import java.util.Map;
import com.ikkong.core.base.BaseController;
import com.ikkong.core.dao.Blade;
import com.ikkong.core.jfinal.ext.kit.JsonKit;
import com.ikkong.core.jfinal.ext.shiro.ShiroKit;
import com.ikkong.core.toolbox.Record;
import com.ikkong.system.controller.base.UrlPermissController;
import com.ikkong.unforgot.model.Unforgot;
import com.ikkong.unforgot.service.UnforgotService;
import com.ikkong.unforgot.service.impl.UnforgotServiceImpl;

/**
 * Generated by Blade.
 * 2018-08-16 22:13:57
 */
public class UnforgotController extends UrlPermissController {
	private static String CODE = "unforgot";
	private static String PERFIX = "nsl_unforgot";
	private static String LIST_SOURCE = "Unforgot.list";
	private static String BASE_PATH = "/platform/unforgot/";
	
	UnforgotService service = new UnforgotServiceImpl();
	
	public void index() {
		setAttr("code", CODE);
		render(BASE_PATH + "unforgot.html");
	}

	public void add() {
		setAttr("code", CODE);
		render(BASE_PATH + "unforgot_add.html");
	}

	public void edit() {
		String id = getPara(0);
		Unforgot unforgot = service.findById(id);
		setAttr("model", JsonKit.toJson(unforgot));
		setAttr("id", id);
		setAttr("code", CODE);
		render(BASE_PATH + "unforgot_edit.html");
	}

	public void view() {
		String id = getPara(0);
		Unforgot unforgot = service.findById(id);
		setAttr("model", JsonKit.toJson(unforgot));
		setAttr("id", id);
		setAttr("code", CODE);
		render(BASE_PATH + "unforgot_view.html");
	}

	public void list() {
        String u_id = getPara("u_id", "");
        String dateformat = getPara("dateformat", "");
        List<Unforgot> grid = Blade.dao().select("Unforgot.unforgot", Unforgot.class, Record.create().set("uid", u_id).set("dateformat", dateformat));
//        Object grid = paginate(LIST_SOURCE);
		renderJson(grid);
	}

	public void save() {
		Unforgot unforgot = mapping(PERFIX, Unforgot.class);
        unforgot.setU_id((int)ShiroKit.getUser().getId());
		boolean temp = service.save(unforgot);
		if (temp) {
			renderJson(success(SAVE_SUCCESS_MSG));
		} else {
			renderJson(error(SAVE_FAIL_MSG));
		}
	}

	public void update() {
		Unforgot unforgot = mapping(PERFIX, Unforgot.class);
		boolean temp = service.update(unforgot);
		if (temp) {
			renderJson(success(UPDATE_SUCCESS_MSG));
		} else {
			renderJson(error(UPDATE_FAIL_MSG));
		}
	}

	public void remove() {
		String ids = getPara("ids");
		int cnt = service.deleteByIds(ids);
		if (cnt > 0) {
			renderJson(success(DEL_SUCCESS_MSG));
		} else {
			renderJson(error(DEL_FAIL_MSG));
		}
	}
}
